{"ast":null,"code":"import _objectSpread from \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nexport const getLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve(position);\n      });\n    } else {\n      reject();\n    }\n  });\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lon: \"\",\n      lat: \"\"\n    };\n  }\n\n  componentDidMount() {\n    getLocation().then(coords => {\n      console.log(coords);\n      this.setState(state => _objectSpread({}, state, {\n        lat: coords.latitude,\n        lon: coords.longitude\n      }));\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.lon, \" Aasdawd\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["H:/DISK A/WEB/Lessons/JavaScript/web academy React/my-app/src/App.js"],"names":["React","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","App","Component","state","lon","lat","componentDidMount","then","coords","console","log","setState","latitude","longitude","catch","e","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAG,iBAAiBC,SAApB,EAA+B;AAC7BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnDL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACD,OAFD;AAGD,KAJD,MAIO;AACLJ,MAAAA,MAAM;AACP;AACF,GARM,CAAP;AASD,CAVM;;AAYP,MAAMK,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KADwB;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,WAAW,GAAGc,IAAd,CAAoBC,MAAD,IAAY;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,QAAL,CAAeR,KAAD,sBAAgBA,KAAhB;AAAuBE,QAAAA,GAAG,EAAEG,MAAM,CAACI,QAAnC;AAA6CR,QAAAA,GAAG,EAAEI,MAAM,CAACK;AAAzD,QAAd;AACD,KAHD,EAGGC,KAHH,CAGUC,CAAD,IAAO;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACD,KALD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,KAAKb,KAAL,CAAWC,GADP,aAAP;AAGD;;AAlB+B;;AAqBlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport const getLocation = () => {\n  return new Promise((resolve, reject) => {\n    if(\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve(position);\n      });\n    } else {\n      reject();\n    }\n  });\n};\n\nclass App extends React.Component {\n  state = {\n    lon: \"\",\n    lat: \"\"\n  };\n  componentDidMount() {\n    getLocation().then((coords) => {\n      console.log(coords);\n      this.setState((state) => ({...state, lat: coords.latitude, lon: coords.longitude}))\n    }).catch((e) => {\n      console.log(e);\n    });\n  };\n\n  render() {\n    return <div className=\"app__container\">\n      {this.state.lon} Aasdawd\n    </div>\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}