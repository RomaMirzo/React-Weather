{"ast":null,"code":"export const getLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve(position);\n      });\n    } else {\n      reject();\n    }\n\n    ;\n  });\n};","map":{"version":3,"sources":["H:/DISK A/WEB/Lessons/JavaScript/web academy React/my-app/src/utils.js"],"names":["getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAM;AAC7B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAG,iBAAiBC,SAApB,EAA+B;AAC7BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnDL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACD,OAFD;AAGD,KAJD,MAIO;AACLJ,MAAAA,MAAM;AACP;;AAAA;AACF,GARM,CAAP;AASD,CAVI","sourcesContent":["export const getLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if(\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          resolve(position);\r\n        });\r\n      } else {\r\n        reject();\r\n      };\r\n    });\r\n  };"]},"metadata":{},"sourceType":"module"}