{"ast":null,"code":"import _objectSpread from \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { getLocation } from \"./utils\";\nimport { Weather } from './components/Weather';\nimport './App.css';\nconst API_URL = \"https://api.openweathermap.org/data/2.5\";\nconst API_KEY = \"840f06a7c96cfaf547124964bde3a17b\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lon: '',\n      lat: '',\n      data: undefined\n    };\n\n    this.fetchWeather = async () => {\n      const _this$state = this.state,\n            lat = _this$state.lat,\n            lon = _this$state.lon;\n      const response = await fetch(`${API_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&inuts=metric`);\n      const data = response.json();\n      this.setCurrentWeather(data);\n    };\n  }\n\n  async componentDidMount() {\n    const _ref = await getLocation(),\n          coords = _ref.coords;\n\n    console.log(coords);\n    this.setState(state => _objectSpread({}, state, {\n      lat: coords.latitude.toFixed(2),\n      lon: coords.longitude.toFixed(2)\n    }));\n    this.fetchWeather();\n  }\n\n  setCurrentWeather() {\n    const _data = data,\n          _data$main = _data.main,\n          temp = _data$main.temp,\n          feels_like = _data$main.feels_like,\n          _data$wind = _data.wind,\n          wind_speed = _data$wind.speed,\n          wind_degree = _data$wind.deg,\n          _data$sys = _data.sys,\n          country = _data$sys.country,\n          sunrise = _data$sys.sunrise,\n          sunset = _data$sys.sunset,\n          name = _data.name,\n          weather = _data.weather;\n    this.setState(state => {\n      return _objectSpread({}, state, {\n        data: {\n          temp,\n          feels_like,\n          wind_speed,\n          wind_degree,\n          country,\n          sunrise,\n          sunset,\n          name,\n          weather\n        }\n      });\n    });\n  }\n\n  renderContent() {\n    return this.state.data ? React.createElement(Weather, Object.assign({}, this.state.data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })) : \"Loading...\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderContent()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["H:/DISK A/WEB/Lessons/JavaScript/web academy React/my-app/src/App.js"],"names":["React","getLocation","Weather","API_URL","API_KEY","App","Component","state","lon","lat","data","undefined","fetchWeather","response","fetch","json","setCurrentWeather","componentDidMount","coords","console","log","setState","latitude","toFixed","longitude","main","temp","feels_like","wind","wind_speed","speed","wind_degree","deg","sys","country","sunrise","sunset","name","weather","renderContent","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAIA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,IAAI,EAAEC;AAHA,KADwB;;AAAA,SAalCC,YAbkC,GAanB,YAAY;AAAA,0BACN,KAAKL,KADC;AAAA,YAClBE,GADkB,eAClBA,GADkB;AAAA,YACbD,GADa,eACbA,GADa;AAEzB,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,OAAQ,gBAAeM,GAAI,QAAOD,GAAI,UAASJ,OAAQ,eAA3D,CAA5B;AACA,YAAMM,IAAI,GAAGG,QAAQ,CAACE,IAAT,EAAb;AACA,WAAKC,iBAAL,CAAuBN,IAAvB;AACD,KAlBiC;AAAA;;AAOhC,QAAMO,iBAAN,GAA0B;AAAA,iBACP,MAAMhB,WAAW,EADV;AAAA,UACjBiB,MADiB,QACjBA,MADiB;;AAExBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAKG,QAAL,CAAed,KAAD,sBAAgBA,KAAhB;AAAuBE,MAAAA,GAAG,EAAES,MAAM,CAACI,QAAP,CAAgBC,OAAhB,CAAwB,CAAxB,CAA5B;AAAwDf,MAAAA,GAAG,EAAEU,MAAM,CAACM,SAAP,CAAiBD,OAAjB,CAAyB,CAAzB;AAA7D,MAAd;AACA,SAAKX,YAAL;AACD;;AAQHI,EAAAA,iBAAiB,GAAG;AAAA,kBAOdN,IAPc;AAAA,6BAEhBe,IAFgB;AAAA,UAETC,IAFS,cAETA,IAFS;AAAA,UAEHC,UAFG,cAEHA,UAFG;AAAA,6BAGhBC,IAHgB;AAAA,UAGFC,UAHE,cAGTC,KAHS;AAAA,UAGeC,WAHf,cAGUC,GAHV;AAAA,4BAIhBC,GAJgB;AAAA,UAIVC,OAJU,aAIVA,OAJU;AAAA,UAIDC,OAJC,aAIDA,OAJC;AAAA,UAIQC,MAJR,aAIQA,MAJR;AAAA,UAKhBC,IALgB,SAKhBA,IALgB;AAAA,UAMhBC,OANgB,SAMhBA,OANgB;AAQlB,SAAKjB,QAAL,CAAcd,KAAK,IAAI;AACrB,+BACKA,KADL;AAEEG,QAAAA,IAAI,EAAE;AACJgB,UAAAA,IADI;AAEJC,UAAAA,UAFI;AAGJE,UAAAA,UAHI;AAIJE,UAAAA,WAJI;AAKJG,UAAAA,OALI;AAMJC,UAAAA,OANI;AAOJC,UAAAA,MAPI;AAQJC,UAAAA,IARI;AASJC,UAAAA;AATI;AAFR;AAcD,KAfD;AAgBD;;AAECC,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKhC,KAAL,CAAWG,IAAX,GAAkB,oBAAC,OAAD,oBAAa,KAAKH,KAAL,CAAWG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB,GAAoD,YAA3D;AACD;;AAED8B,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,aAAL,EADH,CADK,CAAP;AAKD;;AAxD+B;;AA2DlC,eAAelC,GAAf","sourcesContent":["import React from 'react';\nimport {getLocation} from \"./utils\";\nimport {Weather} from './components/Weather';\nimport './App.css';\n\nconst API_URL = \"https://api.openweathermap.org/data/2.5\";\nconst API_KEY = \"840f06a7c96cfaf547124964bde3a17b\";\n\n\n\nclass App extends React.Component {\n  state = {\n    lon: '',\n    lat: '',\n    data: undefined\n  };\n\n  async componentDidMount() {\n    const {coords} = await getLocation();\n    console.log(coords);\n    this.setState((state) => ({...state, lat: coords.latitude.toFixed(2), lon: coords.longitude.toFixed(2)}));\n    this.fetchWeather();\n  };\nfetchWeather = async () => {\n  const {lat, lon} = this.state;\n  const response = await fetch(`${API_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&inuts=metric`);\n  const data = response.json();\n  this.setCurrentWeather(data);\n};\n\nsetCurrentWeather() {\n  const {\n    main: {temp, feels_like},\n    wind: {speed: wind_speed, deg: wind_degree},\n    sys: {country, sunrise, sunset},\n    name,\n    weather\n  } = data;\n  this.setState(state => {\n    return {\n      ...state,\n      data: {\n        temp,\n        feels_like,\n        wind_speed,\n        wind_degree,\n        country,\n        sunrise,\n        sunset,\n        name,\n        weather\n      }\n    };\n  });\n};\n\n  renderContent() {\n    return this.state.data ? <Weather {...this.state.data}/> : \"Loading...\"\n  };\n\n  render() {\n    return <div className=\"app__container\">\n      <div className=\"app__content\">\n        {this.renderContent()}\n      </div>\n    </div>\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}