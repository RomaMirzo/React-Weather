{"ast":null,"code":"import _objectSpread from \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"H:\\\\DISK A\\\\WEB\\\\Lessons\\\\JavaScript\\\\web academy React\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { getLocation } from \"./utils\";\nimport { Weather } from './components/Weather';\nimport { SearchForm } from './components/SearchForm';\nimport './App.css';\nconst API_URL = \"https://api.openweathermap.org/data/2.5\";\nconst API_KEY = \"840f06a7c96cfaf547124964bde3a17b\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lon: '',\n      lat: '',\n      query: '',\n      data: undefined\n    };\n\n    this.fetchWeather = async () => {\n      const _this$state = this.state,\n            lat = _this$state.lat,\n            lon = _this$state.lon;\n      const response = await fetch(`${API_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n      const data = await response.json();\n      this.setCurrentWeather(data);\n    };\n\n    this.setCurrentWeather = data => {\n      const _data$main = data.main,\n            temp = _data$main.temp,\n            feels_like = _data$main.feels_like,\n            _data$wind = data.wind,\n            wind_speed = _data$wind.speed,\n            wind_degree = _data$wind.deg,\n            _data$sys = data.sys,\n            country = _data$sys.country,\n            sunrise = _data$sys.sunrise,\n            sunset = _data$sys.sunset,\n            name = data.name,\n            weather = data.weather;\n      this.setState(state => {\n        return _objectSpread({}, state, {\n          data: {\n            temp,\n            feels_like,\n            wind_speed,\n            wind_degree,\n            country,\n            sunrise,\n            sunset,\n            name,\n            weather\n          }\n        });\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const _ref = await getLocation(),\n          coords = _ref.coords;\n\n    console.log(coords);\n    this.setState(state => _objectSpread({}, state, {\n      lat: coords.latitude.toFixed(2),\n      lon: coords.longitude.toFixed(2)\n    }));\n    this.fetchWeather();\n  }\n\n  renderContent() {\n    return this.state.data ? React.createElement(React.Fragment, null, React.createElement(SearchForm, {\n      onSubmit: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Weather, Object.assign({}, this.state.data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))) : \"Loading...\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.renderContent()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["H:/DISK A/WEB/Lessons/JavaScript/web academy React/my-app/src/App.js"],"names":["React","getLocation","Weather","SearchForm","API_URL","API_KEY","App","Component","state","lon","lat","query","data","undefined","fetchWeather","response","fetch","json","setCurrentWeather","main","temp","feels_like","wind","wind_speed","speed","wind_degree","deg","sys","country","sunrise","sunset","name","weather","setState","componentDidMount","coords","console","log","latitude","toFixed","longitude","renderContent","search","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAIA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,IAAI,EAAEC;AAJA,KADwB;;AAAA,SAclCC,YAdkC,GAcnB,YAAY;AAAA,0BACN,KAAKN,KADC;AAAA,YAClBE,GADkB,eAClBA,GADkB;AAAA,YACbD,GADa,eACbA,GADa;AAEzB,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,gBAAeM,GAAI,QAAOD,GAAI,UAASJ,OAAQ,eAA3D,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAnB;AACA,WAAKC,iBAAL,CAAuBN,IAAvB;AACD,KAnBiC;;AAAA,SAqBlCM,iBArBkC,GAqBdN,IAAI,IAAI;AAAA,yBAOtBA,IAPsB,CAExBO,IAFwB;AAAA,YAEjBC,IAFiB,cAEjBA,IAFiB;AAAA,YAEXC,UAFW,cAEXA,UAFW;AAAA,yBAOtBT,IAPsB,CAGxBU,IAHwB;AAAA,YAGVC,UAHU,cAGjBC,KAHiB;AAAA,YAGOC,WAHP,cAGEC,GAHF;AAAA,wBAOtBd,IAPsB,CAIxBe,GAJwB;AAAA,YAIlBC,OAJkB,aAIlBA,OAJkB;AAAA,YAITC,OAJS,aAITA,OAJS;AAAA,YAIAC,MAJA,aAIAA,MAJA;AAAA,YAKxBC,IALwB,GAOtBnB,IAPsB,CAKxBmB,IALwB;AAAA,YAMxBC,OANwB,GAOtBpB,IAPsB,CAMxBoB,OANwB;AAQ1B,WAAKC,QAAL,CAAczB,KAAK,IAAI;AACrB,iCACKA,KADL;AAEEI,UAAAA,IAAI,EAAE;AACJQ,YAAAA,IADI;AAEJC,YAAAA,UAFI;AAGJE,YAAAA,UAHI;AAIJE,YAAAA,WAJI;AAKJG,YAAAA,OALI;AAMJC,YAAAA,OANI;AAOJC,YAAAA,MAPI;AAQJC,YAAAA,IARI;AASJC,YAAAA;AATI;AAFR;AAcD,OAfD;AAgBD,KA7CiC;AAAA;;AAQhC,QAAME,iBAAN,GAA0B;AAAA,iBACP,MAAMjC,WAAW,EADV;AAAA,UACjBkC,MADiB,QACjBA,MADiB;;AAExBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAKF,QAAL,CAAezB,KAAD,sBAAgBA,KAAhB;AAAuBE,MAAAA,GAAG,EAAEyB,MAAM,CAACG,QAAP,CAAgBC,OAAhB,CAAwB,CAAxB,CAA5B;AAAwD9B,MAAAA,GAAG,EAAE0B,MAAM,CAACK,SAAP,CAAiBD,OAAjB,CAAyB,CAAzB;AAA7D,MAAd;AACA,SAAKzB,YAAL;AACD;;AAkCD2B,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKjC,KAAL,CAAWI,IAAX,GACP,0CACA,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAK8B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,OAAD,oBAAa,KAAKlC,KAAL,CAAWI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,CADO,GAIA,YAJP;AAKD;;AAED+B,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,aAAL,EADH,CADK,CAAP;AAKD;;AA7D+B;;AAgElC,eAAenC,GAAf","sourcesContent":["import React from 'react';\nimport {getLocation} from \"./utils\";\nimport {Weather} from './components/Weather';\nimport {SearchForm} from './components/SearchForm';\nimport './App.css';\n\nconst API_URL = \"https://api.openweathermap.org/data/2.5\";\nconst API_KEY = \"840f06a7c96cfaf547124964bde3a17b\";\n\n\n\nclass App extends React.Component {\n  state = {\n    lon: '',\n    lat: '',\n    query: '',\n    data: undefined\n  };\n\n  async componentDidMount() {\n    const {coords} = await getLocation();\n    console.log(coords);\n    this.setState((state) => ({...state, lat: coords.latitude.toFixed(2), lon: coords.longitude.toFixed(2)}));\n    this.fetchWeather();\n  };\nfetchWeather = async () => {\n  const {lat, lon} = this.state;\n  const response = await fetch(`${API_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n  const data = await response.json();\n  this.setCurrentWeather(data)\n};\n\nsetCurrentWeather = data => {\n  const {\n    main: {temp, feels_like},\n    wind: {speed: wind_speed, deg: wind_degree},\n    sys: {country, sunrise, sunset},\n    name,\n    weather\n  } = data;\n  this.setState(state => {\n    return {\n      ...state,\n      data: {\n        temp,\n        feels_like,\n        wind_speed,\n        wind_degree,\n        country,\n        sunrise,\n        sunset,\n        name,\n        weather\n      }\n    };\n  });\n};\n\n  renderContent() {\n    return this.state.data ? \n    <>\n    <SearchForm onSubmit={this.search} />\n    <Weather {...this.state.data}/>\n    </> : (\"Loading...\")\n  };\n\n  render() {\n    return <div className=\"app__container\">\n      <div className=\"app__content\">\n        {this.renderContent()}\n      </div>\n    </div>\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}